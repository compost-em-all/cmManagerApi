// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CustomerMatterManagementAPI;

public partial class CustomerMatterManagementAPIContext : DbContext
{
    public CustomerMatterManagementAPIContext(DbContextOptions<CustomerMatterManagementAPIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Matter> Matters { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("customers_pkey");

            entity.ToTable("customers", "cmschema");

            entity.HasIndex(e => e.CustomerId, "fki_customerId_ref_customers_fk");

            entity.Property(e => e.CustomerId).UseIdentityAlwaysColumn();
            entity.Property(e => e.Name).HasMaxLength(255);
        });

        modelBuilder.Entity<Matter>(entity =>
        {
            entity.HasKey(e => e.MatterId).HasName("matters_pkey");

            entity.ToTable("matters", "cmschema");

            entity.Property(e => e.MatterId).UseIdentityAlwaysColumn();

            entity.HasOne(d => d.Customer).WithMany(p => p.Matters)
                .HasForeignKey(d => d.CustomerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("matters_CustomerId_fkey");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("users_pkey");

            entity.ToTable("users", "cmschema");

            entity.Property(e => e.UserId).UseIdentityAlwaysColumn();
            entity.Property(e => e.EmailAddr).HasMaxLength(255);
            entity.Property(e => e.FirmName).HasMaxLength(255);
            entity.Property(e => e.FirstName).HasMaxLength(255);
            entity.Property(e => e.LastName).HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}