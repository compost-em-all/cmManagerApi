// <auto-generated />
using CustomerMatterManagementAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CustomerMatterManagementAPI.Data.Migrations
{
    [DbContext(typeof(CustomerMatterManagementAPIContext))]
    [Migration("20250803065245_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CustomerMatterManagementAPI.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CustomerId")
                        .HasName("customers_pkey");

                    b.HasIndex(new[] { "CustomerId" }, "fki_customerId_ref_customers_fk");

                    b.ToTable("customers", "cmschema");
                });

            modelBuilder.Entity("CustomerMatterManagementAPI.Matter", b =>
                {
                    b.Property<int>("MatterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("MatterId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MatterId")
                        .HasName("matters_pkey");

                    b.HasIndex("CustomerId");

                    b.ToTable("matters", "cmschema");
                });

            modelBuilder.Entity("CustomerMatterManagementAPI.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("UserId"));

                    b.Property<string>("EmailAddr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirmName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("UserId")
                        .HasName("users_pkey");

                    b.HasIndex(new[] { "EmailAddr" }, "users_EmailAddr_key")
                        .IsUnique();

                    b.ToTable("users", "cmschema");
                });

            modelBuilder.Entity("CustomerMatterManagementAPI.Matter", b =>
                {
                    b.HasOne("CustomerMatterManagementAPI.Customer", "Customer")
                        .WithMany("Matters")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("matters_CustomerId_fkey");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerMatterManagementAPI.Customer", b =>
                {
                    b.Navigation("Matters");
                });
#pragma warning restore 612, 618
        }
    }
}
